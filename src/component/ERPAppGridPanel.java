/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import component.crm.DashboardPanel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import net.miginfocom.swing.MigLayout;
import raven.main.Main;

/**
 *
 * @author Codepal
 */
public class ERPAppGridPanel extends javax.swing.JPanel {
 private Map<String, ImageIcon> appIcons;
  private static final int MIN_COMPONENT_HEIGHT = 120;
    private static final int BORDER_RADIUS = 10;
    private static final Color BACKGROUND_COLOR = Color.WHITE;
    private static final Color SHADOW_COLOR = new Color(0, 0, 0, 50);
    private static final int SHADOW_SIZE = 5;
    
    private static Main mainApp;
    /**
     * Creates new form ERPAppGridPanel
     */
    public ERPAppGridPanel(Main mainApp) {
       initComponents();
       this.mainApp = mainApp;
       setLayout(new MigLayout("wrap 3, insets 10", "[grow]", "[]10[]10[]"));



        // Initialize app icons
        appIcons = new HashMap<>();
        // Add more app icons as needed
        URL url = getClass().getResource("/raven/menu/" + 1 + ".png");
        if (url != null) {
            appIcons.put("Sales", new ImageIcon(url)); 
            appIcons.put("Inventory", new ImageIcon(url)); 
            appIcons.put("Reservation Manager", new ImageIcon(url)); 
            appIcons.put("LedgerLogic", new ImageIcon(url)); 
            appIcons.put("iHR", new ImageIcon(url));
            appIcons.put("iCRM", new ImageIcon(url));
            appIcons.put("iFarm", new ImageIcon(url));
            appIcons.put("iSchool", new ImageIcon(url));
        }
        // Add app icons and labels to the panel
        for (String appName : appIcons.keySet()) {
            add(createAppPanel(appName, appIcons.get(appName)), "center"); // Center the panel horizontally
        }
    }
    private JPanel createAppPanel(String appName, ImageIcon icon) {
           JPanel panel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g.create();
                g2d.setColor(SHADOW_COLOR);
                g2d.fillRoundRect(0, 0, getWidth() - SHADOW_SIZE, getHeight() - SHADOW_SIZE, BORDER_RADIUS, BORDER_RADIUS);
                g2d.dispose();
            }
        };
        panel.setPreferredSize(new Dimension(200, MIN_COMPONENT_HEIGHT));
        panel.setBackground(BACKGROUND_COLOR);
        panel.setLayout(new BorderLayout());

        JLabel iconLabel = new JLabel(icon);
        JPanel textPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        JLabel nameLabel = new JLabel(appName);
        nameLabel.setFont(new java.awt.Font("sansserif", 1, 18));

        textPanel.add(nameLabel);
        textPanel.addMouseListener(new AppOpenListener(appName));
        
        panel.add(iconLabel, BorderLayout.CENTER);
        panel.add(textPanel, BorderLayout.SOUTH);
        
        return panel;
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    private static class AppOpenListener implements MouseListener {
        private String appName;
       
       
        public AppOpenListener(String appName) {
            this.appName = appName;
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            JOptionPane.showMessageDialog(null, "Loading "+this.appName+" app");
            
            mainApp.showApp(DashboardPanel.AppName.valueOf(appName.trim()));
        }

        @Override
        public void mousePressed(MouseEvent e) {
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
          
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
